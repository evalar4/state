name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libgtest-dev \
          google-mock \
          debhelper \
          dh-make \
          libgmock-dev

    - name: Build and Test
      run: |
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ..
        make -j$(nproc)
        ctest --output-on-failure

    - name: Create DEB package
      run: |
        mkdir -p package-build/usr/{bin,lib} package-build/DEBIAN
        
        # Copy built files
        cp build/bin/state_* package-build/usr/bin/ || true
        cp build/lib/libstate.a package-build/usr/lib/ || true
        
        # Create control file
        cat > package-build/DEBIAN/control <<EOF
        Package: state-pattern
        Version: 1.0-$(date +%Y%m%d)
        Section: utils
        Priority: optional
        Architecture: amd64
        Maintainer: Your Name <your.email@example.com>
        Description: State Pattern implementation
         Example implementation of the State design pattern in C++.
        Depends: libc6 (>= 2.14)
        EOF
        
        # Build package
        dpkg-deb --build package-build
        
        # Create artifacts directory
        mkdir -p artifacts
        mv package-build.deb artifacts/state-pattern_1.0_amd64.deb

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: state-pattern-package
        path: |
          artifacts/state-pattern_1.0_amd64.deb
          build/Testing/**/*.xml
        if-no-files-found: error
        retention-days: 5
